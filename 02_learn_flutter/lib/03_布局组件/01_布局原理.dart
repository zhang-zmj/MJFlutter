import 'package:flutter/material.dart';

/*
布局流程如下：
  上层组件向下层组件传递约束（constraints）条件。
  下层组件确定自己的大小，然后告诉上层组件。注意下层组件的大小必须符合父组件的约束。
  上层组件确定下层组件相对于自身的偏移和确定自身的大小（大多数情况下会根据子组件的大小来确定自身的大小）。

* 任何时候子组件都必须先遵守父组件的约束

BoxConstraints：
    盒模型布局过程中父渲染对象传递给子渲染对象的约束信息，包含最大宽高信息，
    子组件大小需要在约束的范围内

ConstrainedBox：
    用于对子组件添加额外的约束

SizedBox：
    用于给子元素指定固定的宽高, 只是ConstrainedBox的一个定制


如果某一个组件有多个父级ConstrainedBox限制，那么最终会是哪个生效？
   * 对于minWidth和minHeight来说，是取父子中相应数值较大的。
   * 实际上，只有这样才能保证父限制与子限制不冲突


  1、B 组件中在布局 C 时不约束C（可以为无限大）。
  2、C 根据自身真实的空间占用来确定自身的大小。
  3、B 在遵守 A 的约束前提下结合子组件的大小确定自身大小

  * 如果UnconstrainedBox 的大小超过它父组件约束时，也会导致溢出报错
  * 请牢记，任何时候子组件都必须遵守其父组件的约束，所以在此提示读者，在定义一个通用的组件时，
    如果要对子组件指定约束，那么一定要注意，因为一旦指定约束条件，子组件自身就不能违反约束

*/

